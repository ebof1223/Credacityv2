import { type NextPage } from "next";
import Head from "next/head";
import { useContext } from "react";

import Navbar from "~/components/Navbar";
import Alert from "~/components/Navbar/Alert";
import Login from "~/components/Navbar/Login";
import Search from "~/components/Navbar/Search";
import Sidebar from "~/components/Sidebar";
import { AppData } from "~/context/AppData";

const Home: NextPage = () => {
  const { reapply } = useContext(AppData);
  return (
    <>
      <Head>
        <title>Churn.io</title>
        <meta name="Churn.io" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="drawer drawer-mobile">
        <input id="my-drawer-3" type="checkbox" className="drawer-toggle" />
        <div className="drawer-content flex flex-col">
          <Navbar />
          {/* <!-- Page content here --> */}
        </div>
        <div className="drawer-side">
          <label htmlFor="my-drawer-3" className="drawer-overlay"></label>
          <ul className="menu w-80 bg-base-300 p-4 text-base-content">
            <div className="mb-2 flex items-center lg:hidden">
              <Search />
              {reapply && <Alert orientation={"right"} />}
            </div>
            <div className="btn-ghost btn mb-5 hidden bg-base-300 pt-2 text-xl normal-case lg:inline ">
              Churn.io
            </div>
            <li>
              <a>Sidebar Item 1</a>
            </li>
            <li>
              <a>Sidebar Item 2</a>
            </li>
          </ul>
        </div>
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

// const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//   undefined, // no input
//   { enabled: sessionData?.user !== undefined }
// );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
